q()
n
nrcs.url
nrcs.url
nrs.url
nrcs.url
nrcs.url
p_load(xml2)
update(xml2)
update("xml2")
install.packages("xml2")
70
q()
n
install.packages("rvest")
70
q()
n
q()
n
library(curl)
q()
n
handle
handle
q()
n
?read_html
curl(nrcs.url)
read_html(curl(nrcs.url))
curl(https://www.nrcs.usda.gov/conservation-basics/natural-resource-concerns/climate/climate-smart-mitigation-activities)
curl("https://www.nrcs.usda.gov/conservation-basics/natural-resource-concerns/climate/climate-smart-mitigation-activities")
test <- curl("https://www.nrcs.usda.gov/conservation-basics/natural-resource-concerns/climate/climate-smart-mitigation-activities")
test
read_html(test)
unlist(test)
test$text
mode(test)
class(test)
read_html("https://www.nrcs.usda.gov/conservation-basics/natural-resource-concerns/climate/climate-smart-mitigation-activities")
?read_html
handle
q()
n
nrcs.url
handle_data
handle_data()
handle_data(handle)
library(plyr)
library(plyr)
??htmlParse
library(XML)
head(x)
x
x
getHTMLLinks(x)
q()
n
install.packages("pacman")
hicsa.db[,"Practices"]
colnames(hicsa.db)
hicsa.db[,"Practice"]
hicsa.db[grep("Envelope", hicsa.db[,"Practice"]) ,]
nrcs.db
colnames(nrcs.db)
nrcs.db[, "Mitigation"]
nrcs.db[, "Mitigation"]
nrcs.db[nrcs.db[, "Mitigation"] == "Wetlands", ]
nrcs.url
nrcs.csm
nrcs.db
colnames(nrcs.db)
nrcs.db[,"Mitigation"]
nrcs.db[grep("Energy", nrcs.db[,"Mitigation"]),]
View(nrcs.db[grep("Energy", nrcs.db[,"Mitigation"]),])
nrcs.db[grep("Energy", nrcs.db[,"Mitigation"]),]
nrcs.db[nrcs.db[, "Practice"] == "Wetland Restoration",]
nrcs.db
nrcs.db[, "Practices"]
nrcs.db[, "Practice"]
nrcs.db[nrcs.db[, "Practice"] == "Wetland Restoration", ]
nrcs.db[nrcs.db[, "Practice"] == "Wetlands", ]
rm(list= ls())
q()
n
q()
n
q()
n
q()
n
q()
n
q()
n
3
x
colnames(policy)
match.prac
out
match.prac
!(match.prac)
all(!(match.prac))
seq_along(policy)
policy
i = 29
is.na(pol.csa[[i]])
!(any(is.na(pol.csa[[i]])))
colnames(hicsa.db)
colnames(policy)
i =1
desc
policy[i,]
i = 2
desc
colnames(policY)
colnames(policy)
resc
nrow(policy)
out
x
x[[j]]
x
out
head(out)
out
out
str(out)
out[[1]]
out[[2]]
out[[3]]
out
length(out)
out[[1]]
out[[2]]
x
desc
i = 30
desc
resc
mode(resc)
class(resc)
description
description
out
out[[1]]
out[[2]]
out[[3]]
out[[4]]
x
out
lapply(out)
lapply(out, length)
out[[30]]
out[[30]]
out[[30]]
mode(out[[30]])
out[[30]][[1]]
mode(out[[30]][[1]])
class(out[[30]][[1]])
class(out[[30]][[2]])
(out[[30]][[2]])
do.call(rbind, out[[2]])
do.call(rbind, out[[3]])
do.call(rbind, out[[30]])
out[[1]]
out[[1]]
out[[2]]
out[[1]]
out[[2]]
out[[30]]
dim(x)
dim(out)
head(out)
hicsa.db[, "Mitigation"]
unique(hicsa.db[, "Mitigation"])
out[, "Practice"]
hicsa.db[, "Practice"]
out[, "Practice"]
unique(out[, "Practice"])
unique(hicsa.db[, "Practice"])
out[, "Practice"]
pol.csv
pol.csa
pol.csa[[1]]
pol.csa[[2]]
pol.csa[[3]]
pol.csa[[4]]
pol.csa[[5]]
hicsa.db
prac.miti
prac.miti
prac.miti
prac.miti[, "Practice"]
mitigation
colnames(hicsa.db)
prac.miti
mitigation
mitigation
dim(mitigation
)
length(mitigation)
nrow(out)
prac.miti
mitigation
pol.db
colnames(pol.db)
head(pol.db)
out
policy[, "URL"]
pol.db
dim(pol.db)
dim(merge.db)
head(grants)
colnames(grants)
colnames(grants)
head(grants)
head(data.frame(grants))
colnames(grants)
grants[, "Example"]
unlist(grants[, "Example"])
supp[, "Example"]
is.na(supp[, "Example"])
colnames(supp)
colnames(hicsa.db)
head(supp.db)
setwd("../hicsatool/")
runApp()
setwd("../hi-csa-db/")
hicsa.db
hicsa.db[, "Mitigation"]
hicsa.db[, "Mitigation"]
getwd()
setwd("../hicsatool/")
runApp()
head(pol.db)
head(supp.db)
setwd("../hi-csa-db/")
setwd("../hicsatool/")
runApp()
getwd()
runApp()
rsconnect::deployApp()
q()
n
colnames(policy)
policy
library(gargle)
token_fetch()
token_fetch()
2
q()
n
2
1
q()
n
?token_fetch
q()
n
3
pol.db
colnames(policy)
pol.db[, "Description"]
pol.db[, "Description"]
pol.db[1, "Description"]
pol.db[5, "Description"]
pol.db[5, "Description"]
2
q()
n
